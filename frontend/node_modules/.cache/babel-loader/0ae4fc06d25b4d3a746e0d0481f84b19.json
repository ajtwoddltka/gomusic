{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\whktj\\\\Go_music\\\\src\\\\CreditCard.js\";\nimport React from 'react';\nimport { injectStripe, StripeProvider, Elements, CardElement } from 'react-stripe-elements';\nimport Cookies from 'js-cookie';\nconst INITIALSTATE = \"INITIAL\",\n      SUCCESSSTATE = \"COMPLETE\",\n      FAILEDSTATE = \"FAILED\";\n\nclass CreditCardForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      status: INITIALSTATE,\n      useExisting: false\n    };\n  }\n\n  renderCreditCardInformation() {\n    const user = Cookies.getJSON('user');\n    const style = {\n      base: {\n        'fontSize': '20px',\n        'color': '#495057',\n        'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\n      }\n    };\n    const usersavedcard = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn  btn-outline-success text-center mx-auto\",\n      onClick: () => this.setState({\n        useExisting: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Use saved card?\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }));\n    let remembercardcheck = null;\n\n    if (user.loggedin === true) {\n      remembercardcheck = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row form-check text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        value: \"\",\n        id: \"remembercardcheck\",\n        name: \"remember\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"remembercardcheck\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, \"Remember Card?\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, user.loggedin ? usersavedcard : null, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Payment Info\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"cc-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, \"Name On Card:\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"cc-name\",\n      name: \"name\",\n      className: \"form-control\",\n      placeholder: \"Name on Card\",\n      onChange: this.handleChange,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \"Card Information:\"), /*#__PURE__*/React.createElement(CardElement, {\n      id: \"card\",\n      className: \"form-control\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }))), remembercardcheck, /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success btn-large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, this.props.operation)));\n  }\n\n  renderSuccess() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-4 text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Request Successfull....\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success btn-large\",\n      onClick: () => {\n        this.props.toggle();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Ok\"));\n  }\n\n  renderFailure() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-4 text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \" Error occured while processing credit card... \"), this.renderCreditCardInformation());\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    let id = \"\";\n\n    if (!this.state.useExisting) {\n      let {\n        token\n      } = await this.props.stripe.createToken({\n        name: this.state.name\n      });\n\n      if (token == null) {\n        console.log(\"invalid token\");\n        this.setState({\n          status: FAILEDSTATE\n        });\n        return;\n      }\n\n      id = token.id;\n    }\n\n    let response = await fetch(\"/users/charge\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        token: id,\n        customer_id: this.props.user,\n        product_id: this.props.productid,\n        sell_price: this.props.price,\n        rememberCard: this.state.remember !== undefined,\n        useExisting: this.state.useExisting\n      })\n    }); // let response = await this.sendChargeRequest(token,false);\n\n    if (response.ok) {\n      console.log(\"Purchase Complete!\");\n      this.setState({\n        status: SUCCESSSTATE\n      });\n    } else {\n      this.setState({\n        status: FAILEDSTATE\n      });\n    }\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    let body = null;\n\n    switch (this.state.status) {\n      case SUCCESSSTATE:\n        body = this.renderSuccess();\n        break;\n\n      case FAILEDSTATE:\n        body = this.renderFailure();\n        break;\n\n      default:\n        body = this.renderCreditCardInformation();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, body);\n  }\n\n}\n\nexport default function CreditCardInformation(props) {\n  if (!props.show) {\n    return null;\n  }\n\n  const CCFormWithStripe = injectStripe(CreditCardForm);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, props.separator ? /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 32\n    }\n  }) : null, /*#__PURE__*/React.createElement(StripeProvider, {\n    apiKey: \"pk_test_TYooMQauvdEDq54NiTphI7jx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Elements, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCFormWithStripe, {\n    user: props.user,\n    operation: props.operation,\n    productid: props.productid,\n    price: props.price,\n    toggle: props.toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/whktj/Go_music/src/CreditCard.js"],"names":["React","injectStripe","StripeProvider","Elements","CardElement","Cookies","INITIALSTATE","SUCCESSSTATE","FAILEDSTATE","CreditCardForm","Component","constructor","props","handleSubmit","bind","handleChange","state","status","useExisting","renderCreditCardInformation","user","getJSON","style","base","usersavedcard","setState","remembercardcheck","loggedin","operation","renderSuccess","toggle","renderFailure","event","preventDefault","id","token","stripe","createToken","name","console","log","response","fetch","method","headers","body","JSON","stringify","customer_id","product_id","productid","sell_price","price","rememberCard","remember","undefined","ok","target","value","render","CreditCardInformation","show","CCFormWithStripe","separator"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectStripe, StripeProvider, Elements, CardElement } from 'react-stripe-elements';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst INITIALSTATE = \"INITIAL\", SUCCESSSTATE = \"COMPLETE\", FAILEDSTATE = \"FAILED\";\r\n\r\nclass CreditCardForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            status: INITIALSTATE,\r\n            useExisting: false\r\n        };\r\n    }\r\n\r\n    renderCreditCardInformation() {\r\n        const user = Cookies.getJSON('user');\r\n\r\n        const style = {\r\n            base: {\r\n                'fontSize': '20px',\r\n                'color': '#495057',\r\n                'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\r\n            }\r\n        };\r\n        const usersavedcard = <div>\r\n            <div className=\"form-row text-center\">\r\n                <button type=\"submit\" className=\"btn  btn-outline-success text-center mx-auto\" onClick={()=>this.setState({useExisting:true})}>Use saved card?</button>\r\n            </div>\r\n            <hr />\r\n        </div>\r\n\r\n        let remembercardcheck = null;\r\n        if (user.loggedin === true) {\r\n            remembercardcheck = <div className=\"form-row form-check text-center\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"remembercardcheck\" name='remember' onChange={this.handleChange} />\r\n                <label className=\"form-check-label\" htmlFor=\"remembercardcheck\">\r\n                    Remember Card?\r\n            </label>\r\n            </div>;\r\n        }\r\n        return (\r\n            <div>\r\n          \r\n                <form onSubmit={this.handleSubmit}>\r\n                {(user.loggedin)?usersavedcard:null}\r\n                <h5 className=\"mb-4\">Payment Info</h5>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col-lg-12 form-group\">\r\n                            <label htmlFor=\"cc-name\">Name On Card:</label>\r\n                            <input id=\"cc-name\" name='name' className=\"form-control\" placeholder='Name on Card' onChange={this.handleChange} type='text' />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col-lg-12 form-group\">\r\n                            <label htmlFor=\"card\">Card Information:</label>\r\n                            <CardElement id=\"card\" className=\"form-control\" style={style} />\r\n                        </div>\r\n                    </div>\r\n                    {remembercardcheck}\r\n                    <hr className=\"mb-4\" />\r\n                    <button type=\"submit\" className=\"btn btn-success btn-large\" >{this.props.operation}</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderSuccess() {\r\n        return (\r\n            <div>\r\n                <h5 className=\"mb-4 text-success\">Request Successfull....</h5>\r\n                <button type=\"submit\" className=\"btn btn-success btn-large\" onClick={() => { this.props.toggle() }}>Ok</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderFailure() {\r\n        return (\r\n            <div>\r\n                <h5 className=\"mb-4 text-danger\"> Error occured while processing credit card... </h5>\r\n                {this.renderCreditCardInformation()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n        let id = \"\";\r\n        if (!this.state.useExisting) {\r\n            let { token } = await this.props.stripe.createToken({ name: this.state.name });\r\n            if (token == null) {\r\n                console.log(\"invalid token\");\r\n                this.setState({ status: FAILEDSTATE });\r\n                return;\r\n            }\r\n            id = token.id;\r\n        }\r\n\r\n        let response = await fetch(\"/users/charge\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                token: id,\r\n                customer_id: this.props.user,\r\n                product_id: this.props.productid,\r\n                sell_price: this.props.price,\r\n                rememberCard: this.state.remember !== undefined,\r\n                useExisting: this.state.useExisting\r\n            })\r\n        });\r\n\r\n        // let response = await this.sendChargeRequest(token,false);\r\n        if (response.ok) {\r\n            console.log(\"Purchase Complete!\");\r\n            this.setState({ status: SUCCESSSTATE });\r\n        } else {\r\n            this.setState({ status: FAILEDSTATE });\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        event.preventDefault();\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let body = null;\r\n        switch (this.state.status) {\r\n            case SUCCESSSTATE:\r\n                body = this.renderSuccess();\r\n                break;\r\n            case FAILEDSTATE:\r\n                body = this.renderFailure();\r\n                break;\r\n            default:\r\n                body = this.renderCreditCardInformation();\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {body}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default function CreditCardInformation(props) {\r\n    if (!props.show) {\r\n        return null;\r\n    }\r\n    const CCFormWithStripe = injectStripe(CreditCardForm);\r\n    return (\r\n        <div>\r\n            {props.separator ? <hr /> : null}\r\n            <StripeProvider apiKey=\"pk_test_TYooMQauvdEDq54NiTphI7jx\">\r\n                <Elements>\r\n                    <CCFormWithStripe user={props.user} operation={props.operation} productid={props.productid} price={props.price} toggle={props.toggle} />\r\n                </Elements>\r\n            </StripeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}