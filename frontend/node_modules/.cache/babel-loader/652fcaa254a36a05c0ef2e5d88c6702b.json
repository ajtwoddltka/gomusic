{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\whktj\\\\gomu\\\\src\\\\CreditCard.js\";\nimport React from 'react';\nimport { injectStripe, StripeProvider, Elements, CardElement } from 'react-stripe-elements';\nconst INITIALSTATE = \"INITIAL\",\n      SUCCESSSTATE = \"COMPLETE\",\n      FAILEDSTATE = \"FAILED\";\n\nclass CreditCardForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      value: '',\n      status: INITIALSTATE\n    };\n  }\n\n  renderCreditCardInformation() {\n    const style = {\n      base: {\n        'fontSize': '20px',\n        'color': '#495057',\n        'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\n      }\n    };\n    const usersavedcard = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn  btn-outline-success text-center mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, \"Use saved card?\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }));\n    const remembercardcheck = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row form-check text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      value: \"\",\n      id: \"remembercardcheck\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"remembercardcheck\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"Remember Card?\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, usersavedcard, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"Payment Info\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"cc-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, \"Name On Card:\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"cc-name\",\n      name: \"cc-name\",\n      className: \"form-control\",\n      placeholder: \"Name on Card\",\n      onChange: this.handleInputChange,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"Card Information:\"), /*#__PURE__*/React.createElement(CardElement, {\n      id: \"card\",\n      className: \"form-control\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }))), remembercardcheck, /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success btn-large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, this.props.operation)));\n  }\n\n  renderSuccess() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-4 text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Credit card payment processed.....\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success btn-large\",\n      onClick: () => {\n        this.props.toggle();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Ok\"));\n  }\n\n  renderFailure() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-4 text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \" Credit card information invalid, try again or exit\"), this.renderCreditCardInformation());\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"Handle submit called, with name: \" + this.state.value);\n    let {\n      token\n    } = await this.props.stripe.createToken({\n      name: this.state.value\n    });\n\n    if (token == null) {\n      console.log(\"invalid token\");\n      this.setState({\n        status: FAILEDSTATE\n      });\n      return;\n    }\n\n    let response = await fetch(\"/charge\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"text/plain\"\n      },\n      body: JSON.stringify({\n        token: token.id,\n        operation: this.props.operation\n      })\n    });\n    console.log(response.ok);\n\n    if (response.ok) {\n      console.log(\"Purchase Complete!\");\n      this.setState({\n        status: SUCCESSSTATE\n      });\n    } //  document.getElementsByClassName('#modal').modal('hide');\n\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    let body = null;\n\n    switch (this.state.status) {\n      case SUCCESSSTATE:\n        body = this.renderSuccess();\n        break;\n\n      case FAILEDSTATE:\n        body = this.renderFailure();\n        break;\n\n      default:\n        body = this.renderCreditCardInformation();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, body);\n  }\n\n}\n\nexport default function CreditCardInformation(props) {\n  if (!props.show) {\n    return null;\n  }\n\n  const CCFormWithStripe = injectStripe(CreditCardForm);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, props.separator ? /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 32\n    }\n  }) : null, /*#__PURE__*/React.createElement(StripeProvider, {\n    apiKey: \"pk_test_LwL4RUtinpP3PXzYirX2jNfR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Elements, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCFormWithStripe, {\n    operation: props.operation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/whktj/gomu/src/CreditCard.js"],"names":["React","injectStripe","StripeProvider","Elements","CardElement","INITIALSTATE","SUCCESSSTATE","FAILEDSTATE","CreditCardForm","Component","constructor","props","handleSubmit","bind","handleInputChange","state","value","status","renderCreditCardInformation","style","base","usersavedcard","remembercardcheck","operation","renderSuccess","toggle","renderFailure","event","preventDefault","console","log","token","stripe","createToken","name","setState","response","fetch","method","headers","body","JSON","stringify","id","ok","target","render","CreditCardInformation","show","CCFormWithStripe","separator"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectStripe, StripeProvider, Elements, CardElement } from 'react-stripe-elements';\r\n\r\nconst INITIALSTATE = \"INITIAL\", SUCCESSSTATE = \"COMPLETE\", FAILEDSTATE = \"FAILED\";\r\n\r\nclass CreditCardForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            value: '',\r\n            status: INITIALSTATE\r\n        };\r\n    }\r\n\r\n    renderCreditCardInformation() {\r\n        const style = {\r\n            base: {\r\n                'fontSize': '20px',\r\n                'color': '#495057',\r\n                'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\r\n            }\r\n        };\r\n        const usersavedcard = <div>\r\n            <div className=\"form-row text-center\">\r\n                <button type=\"button\" className=\"btn  btn-outline-success text-center mx-auto\">Use saved card?</button>\r\n            </div>\r\n            <hr />\r\n        </div>\r\n\r\n        const remembercardcheck = <div className=\"form-row form-check text-center\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"remembercardcheck\" />\r\n            <label className=\"form-check-label\" htmlFor=\"remembercardcheck\">\r\n                Remember Card?\r\n            </label>\r\n        </div>;\r\n        return (\r\n            <div>\r\n                {usersavedcard}\r\n                <h5 className=\"mb-4\">Payment Info</h5>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col-lg-12 form-group\">\r\n                            <label htmlFor=\"cc-name\">Name On Card:</label>\r\n                            <input id=\"cc-name\" name='cc-name' className=\"form-control\" placeholder='Name on Card' onChange={this.handleInputChange} type='text' />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col-lg-12 form-group\">\r\n                            <label htmlFor=\"card\">Card Information:</label>\r\n                            <CardElement id=\"card\" className=\"form-control\" style={style} />\r\n                        </div>\r\n                    </div>\r\n                    {remembercardcheck}\r\n                    <hr className=\"mb-4\" />\r\n                    <button type=\"submit\" className=\"btn btn-success btn-large\" >{this.props.operation}</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderSuccess() {\r\n        return (\r\n            <div>\r\n                <h5 className=\"mb-4 text-success\">Credit card payment processed.....</h5>\r\n                <button type=\"submit\" className=\"btn btn-success btn-large\" onClick={() => { this.props.toggle() }}>Ok</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderFailure() {\r\n        return (\r\n            <div>\r\n                <h5 className=\"mb-4 text-danger\"> Credit card information invalid, try again or exit</h5>\r\n                {this.renderCreditCardInformation()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        \r\n        event.preventDefault();\r\n        console.log(\"Handle submit called, with name: \" + this.state.value);\r\n\r\n        let { token } = await this.props.stripe.createToken({ name: this.state.value });\r\n        if (token == null) {\r\n            console.log(\"invalid token\");\r\n            this.setState({ status: FAILEDSTATE });\r\n            return;\r\n        }\r\n\r\n        let response = await fetch(\"/charge\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"text/plain\" },\r\n            body: JSON.stringify({\r\n                token: token.id,\r\n                operation: this.props.operation,\r\n            })\r\n        });\r\n        console.log(response.ok);\r\n        if (response.ok) {\r\n            console.log(\"Purchase Complete!\");\r\n            this.setState({ status: SUCCESSSTATE });\r\n        }\r\n        //  document.getElementsByClassName('#modal').modal('hide');\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.setState({\r\n            value: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let body = null;\r\n        switch (this.state.status) {\r\n            case SUCCESSSTATE:\r\n                body = this.renderSuccess();\r\n                break;\r\n            case FAILEDSTATE:\r\n                body = this.renderFailure();\r\n                break;\r\n            default:\r\n                body = this.renderCreditCardInformation();\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {body}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default function CreditCardInformation(props) {\r\n    if (!props.show) {\r\n        return null;\r\n    }\r\n    const CCFormWithStripe = injectStripe(CreditCardForm);\r\n    return (\r\n        <div>\r\n            {props.separator ? <hr /> : null}\r\n            <StripeProvider apiKey=\"pk_test_LwL4RUtinpP3PXzYirX2jNfR\">\r\n                <Elements>\r\n                    <CCFormWithStripe operation={props.operation} />\r\n                </Elements>\r\n            </StripeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}